// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StackFiap.Data;

namespace StackFiap.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20181105021656_StackFiap9")]
    partial class StackFiap9
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-preview3-35497")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("StackFiap.Models.Autor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Nome")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Autores");
                });

            modelBuilder.Entity("StackFiap.Models.Pergunta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Aberto");

                    b.Property<int>("AutorId");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("getdate()");

                    b.Property<int?>("MelhorRespostaId");

                    b.Property<string>("Texto")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("AutorId")
                        .IsUnique();

                    b.HasIndex("MelhorRespostaId")
                        .IsUnique()
                        .HasFilter("[MelhorRespostaId] IS NOT NULL");

                    b.ToTable("Perguntas");
                });

            modelBuilder.Entity("StackFiap.Models.Resposta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Aberto");

                    b.Property<int>("AutorId");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("getdate()");

                    b.Property<int>("PerguntaId");

                    b.Property<string>("Texto")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("AutorId")
                        .IsUnique();

                    b.HasIndex("PerguntaId");

                    b.ToTable("Respostas");
                });

            modelBuilder.Entity("StackFiap.Models.Pergunta", b =>
                {
                    b.HasOne("StackFiap.Models.Autor", "Autor")
                        .WithOne()
                        .HasForeignKey("StackFiap.Models.Pergunta", "AutorId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("StackFiap.Models.Resposta", "MelhorResposta")
                        .WithOne("Pergunta")
                        .HasForeignKey("StackFiap.Models.Pergunta", "MelhorRespostaId")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("StackFiap.Models.Resposta", b =>
                {
                    b.HasOne("StackFiap.Models.Autor", "Autor")
                        .WithOne()
                        .HasForeignKey("StackFiap.Models.Resposta", "AutorId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("StackFiap.Models.Pergunta")
                        .WithMany("Respostas")
                        .HasForeignKey("PerguntaId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
